[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "torchregister"
version = "0.1.0"
description = "Multi-scale affine and deformable registration using PyTorch"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Bryn Lloyd"},
]
keywords = ["registration", "medical imaging", "pytorch", "computer vision"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]

dependencies = [
    "torch>=2.0.0",
    "SimpleITK",
    "numpy",
    "scikit-image",
    "matplotlib",
    "tqdm",
]

[project.optional-dependencies]
dev = [
    "mypy",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "ruff",
]

[project.urls]
Homepage = "https://github.com/dyollb/torchregister"
Repository = "https://github.com/dyollb/torchregister"
Issues = "https://github.com/dyollb/torchregister/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["torchregister*"]

[tool.setuptools.package-data]
torchregister = ["py.typed"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["torchregister"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=torchregister --cov-report=term-missing"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "tests/",
    "examples/",
]
